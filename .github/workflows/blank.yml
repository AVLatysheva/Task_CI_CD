name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Stage 1: Сборка
  stage_build:
    runs-on: ubuntu-latest
    name: Build Job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          tags: registry.example.com/myapp:latest
          push: false
          
      - name: Save image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: ./image

  # Stage 2: Тестирование
  stage_test:
    needs: [stage_build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        test: [test_job1, test_job2, test_job3]
    
    jobs:
      test_job1:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v3
            
          - name: Download artifact
            uses: actions/download-artifact@v3
            with:
              name: docker-image
              
          - name: Run unit tests
            run: |
              docker run myapp:latest /tests/unit.sh
              
      test_job2:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v3
            
          - name: Download artifact
            uses: actions/download-artifact@v3
            with:
              name: docker-image
              
          - name: Run integration tests
            run: |
              docker run myapp:latest /tests/integration.sh
              
      test_job3:
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v3
            
          - name: Download artifact
            uses: actions/download-artifact@v3
            with:
              name: docker-image
              
          - name: Run e2e tests
            run: |
              docker run myapp:latest /tests/e2e.sh

  # Stage 3: Деплой в DEV
  stage_deploy_dev:
    needs: [stage_test]
    runs-on: ubuntu-latest
    name: Deploy to DEV
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Kubernetes
        uses: appleboy/kubectl-action@v0.1.10
        with:
          config: ${{ secrets.KUBERNETES_CONFIG_DEV }}
          
      - name: Deploy to DEV
        run: |
          kubectl set image deployment/myapp myapp=registry.example.com/myapp:latest
          kubectl rollout status deployment/myapp

  # Stage 4: Деплой в PRD
  stage_deploy_prd:
    needs: [stage_deploy_dev]
    runs-on: ubuntu-latest
    name: Deploy to PRD
    if: github.ref == 'refs/heads/main'
    environment: production
    concurrency:
      group: prd-deployment
      cancel-in-progress: true
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Wait for approval
        uses: docker/wait-action@v2
        with:
          timeout: 3600
          
      - name: Set up Kubernetes
        uses: appleboy/kubectl-action@v0.1.10
        with:
          config: ${{ secrets.KUBERNETES_CONFIG_PRD }}
          
      - name: Deploy to PRD
        run: |
          kubectl set image deployment/myapp myapp=registry.example.com/myapp:latest
          kubectl rollout status deployment/myapp
